#summary An Example Web Service Implementation
#labels ffead,cpp,web,service,wsdl,example,implementation

= {{{Testing.h}}} =
{{{
#ifndef Testing_H_
#define Testing_H_

class Testing {
public:
	Testing();
	virtual ~Testing();
	void test1(string);
	string test2();
	void test3(Test);
	Test test4(string);
};
#endif /* Testing_H_ */
}}}


= {{{Testing.cpp}}} =
{{{
#include "Testing.h"

Testing::Testing() {
	// TODO Auto-generated constructor stub

}

Testing::~Testing() {
	// TODO Auto-generated destructor stub
}

void Testing::test1(string in)
{
	cout << "in Webservice Req for test1 --\n" << in << flush;
}
string Testing::test2()
{
	cout << "in Webservice Req for test2 --\n" <<  flush;
	return "success";
}
void Testing::test3(Test t)
{
	cout << "in Webservice Req for test3 --\n" << t.getName() << flush;
}
Test Testing::test4(string in)
{
	Test g;
	g.setId(1);
	g.setName("Ffead-cpp");
	cout << "in Webservice Req for test4 --\n" << in << flush;
	return g;
}
}}}

= Config for web-service in ws.xml =
{{{
<web-services>
	<!--Custom implementation of a web-service, with methods-->
        <web-service name="testing" class="Testing">
                <test1 outname="result"/>
                <test2 outname="result"/>
                <test3 outname="result"/>
                <test4 outname="result"/>
        </web-service>
</web-services>
}}}