#summary Installing ffead-server on Windows and Cygwin
#labels Featured,Phase-Deploy

= Installation On Windows with Cygwin = 
<font size="3" face="Georgia, Arial">
  * Download Cygwin setup.exe and follow instruction to install Cygwin, proceed with default settings.
  * After Cygwin is successfully installed, you can open a cygwin terminal to check whether Cygwin works.
  * Run the setup.exe to install further dependencies whenever required.
  * Following are the dependencies,
    # gcc
    # g++
    # autoconf
    # automake
    # openssl libraries and devel (use Cygwin_SSL_UnixOdbc_libs.zip from downloads section for version 1.0)
    # unixODBC libraries and devel (not found in Cygwin reposistory, use Cygwin_SSL_UnixOdbc_libs.zip from download section)
    # bison,yacc,flex,gdb,readline,binutils (for building and installing openssl and unixODBC)
  * Copy bin/gcc-3 or bin/gcc-4 and rename it ot gcc (the already existing link file gcc sometimes gives permission errors)
  * You can build and install openssl and unixodbc and copy the required library files to the cygwin lib folder. The already built libraries are present in the Cygwin_SSL_UnixOdbc_libs.zip file which can be copied to the lib folder directly.
  * Download the latest release tar file and extract it to the location of your choice under Cygwin installation.
  * Install *Unix-ODBC* and required odbc files for *MySQL* dependency
  * Install *Open-SSL* as well
  * Also included *prototype.js* in source for AJAX support
  * Go to the ffead-server/Release or ffead-server/Debug depending on whether you need to debug the server code
  * Open terminal and type "make all" and "make build-apps" to build the server and the default applications provided
  * *From version 1.8 onwards you can also select modules to build within ffead using the make modules={comma separated module list} all command, for a complete list of modules names please refer Modules, for e.g, to only build modules webservice,binserialize and distocache use the command "make modules=webservice,binserialize,distocache all"*
  * This will create the distribution folder named ffead-server inside ffead-server/Release or ffead-server/Debug folders accordingly
  * Type ./server.sh when inside the ffead-server/Release/ffead-server folder to start the application server
  * Go to the ffead-server/Release/ffead-server/tests folder and run ./runTests.sh, this will do an initial sanity of the capabilities of the framework and also validate the same
  * A default application is already provided for your reference inside the ffead-server/web folder, this application is served at urlpath /
  * 2 other applications are provided, urlpath /flexApp and /oauthApp
  * To compile only the default application shared library go to the ffead-server/Release/ffead-server/web/default/src/Debug folder and run "make all"
  * Copy the libdefault library to the ffead-server/Release/ffead-server/lib folder
  * Place your application shared library inside the ffead-server/Release/ffead-server/lib or ffead-server/Debug/ffead-server/lib folder.
  * Place your web application specific files inside the ffead-server/Release/ffead-server/web folder inside a folder with your application name
</font>