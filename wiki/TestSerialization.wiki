#summary Example Serialization Usage
#labels cpp,serialization,support,ffead

{{{
#include "Serialize.h"
#include "Test.h"

int main()
{
        /*Create an instance of the Serializer*/
	Serialize ref;

        /*Decalre Objects intended for Serialization*/
	typedef map<int,Test> trmap;
        Test ooo;
	trmap oo;
	oo[0] = ooo;

        /*Serialize the Object*/
	cout << ref.serialize<int,Test>(oo) << flush;
	typedef vector<Test> terg;
        Test rt;
	typedef map<string,int> tergm;
        tergm pol;
	terg terf;
	terf.push_back(rt);
	cout << ref.serialize<terg>(terf) << flush;
	cout << ref.serialize<tergm>(pol) << flush;
	typedef vector<string> ttt;
	ttt te;
        
	Test tr;
        tr.setName("asdasd");
	Object tu;
	tu << tr;
	cout << ref.serialize<int>(1) << flush;
	cout << ref.serialize<float>(1.0) << flush;
	cout << ref.serialize<string>("sa") << flush;
	cout << ref.serialize<Test>(tr) << flush;

        /*Un Serialize the xml to get the Object*/
	int i = ref.unserialize<int>("<int>1</int>");
	cout << i << "\n" << flush;
	float j = ref.unserialize<float>("<float>1</float>");
	cout << j << "\n" << flush;
	string k = ref.unserialize<string>("<string>sa</string>");
	cout << k << "\n" << flush;
	k = *(string*)ref.unSerializeUnknown("<string>sa</string>","string");
	cout << k << "\n" << flush;
	Test t = ref.unserialize<Test>("<Test><id type=\"int\">134591544</id><name type=\"string\">fsdfsdf</name></Test>");
	cout << t.getId() << " " << t.getName() << "\n" << flush;
	tu << te;
	cout << ref.serializeObject(tu) << flush;
}
}}}